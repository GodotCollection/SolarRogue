[gd_scene load_steps=23 format=2]

[ext_resource path="res://data/private/textures/green_square.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "Speed"

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "Amplitude"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 6

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 7

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "Frequency"

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 0

[sub_resource type="VisualShader" id=20]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_5;uniform float Frequency;
uniform float Speed;
uniform float Amplitude;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	vec4 tex_frg_5_read = texture( tex_frg_5 , n_out2p0.xy );
	n_out5p0 = tex_frg_5_read.rgb;
	n_out5p1 = tex_frg_5_read.a;

// ScalarUniform:4
	float n_out4p0;
	n_out4p0 = Frequency;

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = dot(n_out2p0,vec3(0.333333,0.333333,0.333333)) * n_out4p0;

// ScalarUniform:13
	float n_out13p0;
	n_out13p0 = Speed;

// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// ScalarOp:14
	float n_out14p0;
	n_out14p0 = n_out13p0 * n_out3p0;

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = n_out7p0 + n_out14p0;

// ScalarFunc:9
	float n_out9p0;
	n_out9p0 = sin(n_out8p0);

// ScalarOp:10
	float n_in10p1 = 1.00000;
	float n_out10p0;
	n_out10p0 = n_out9p0 + n_in10p1;

// ScalarOp:11
	float n_in11p1 = 2.00000;
	float n_out11p0;
	n_out11p0 = n_out10p0 / n_in11p1;

// ScalarUniform:15
	float n_out15p0;
	n_out15p0 = Amplitude;

// ScalarOp:16
	float n_out16p0;
	n_out16p0 = n_out11p0 * n_out15p0;

// ScalarOp:18
	float n_in18p1 = 1.00000;
	float n_out18p0;
	n_out18p0 = n_out15p0 - n_in18p1;

// ScalarOp:17
	float n_out17p0;
	n_out17p0 = n_out16p0 - n_out18p0;

// ScalarOp:6
	float n_out6p0;
	n_out6p0 = n_out5p1 * n_out17p0;

// ScalarOp:19
	float n_in19p1 = 0.00000;
	float n_out19p0;
	n_out19p0 = max( n_out6p0 , n_in19p1 );

// ScalarOp:20
	float n_in20p1 = 0.50000;
	float n_out20p0;
	n_out20p0 = min( n_out19p0 , n_in20p1 );

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out20p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 352, -307 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1220, 140 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -1280, -240 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( -980, 460 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -1000, 80 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( 0, -200 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( 640, 140 )
nodes/fragment/7/node = SubResource( 17 )
nodes/fragment/7/position = Vector2( -780, -60 )
nodes/fragment/8/node = SubResource( 18 )
nodes/fragment/8/position = Vector2( -580, 120 )
nodes/fragment/9/node = SubResource( 19 )
nodes/fragment/9/position = Vector2( -380, 140 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -180, 120 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 0, 120 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1120, -40 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1000, 340 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -800, 360 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 60, 300 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 260, 160 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 440, 200 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 260, 320 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 820, 200 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( 1040, 340 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 1, 6, 0, 4, 0, 7, 1, 7, 0, 8, 0, 8, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 2, 0, 5, 0, 2, 0, 12, 0, 13, 0, 14, 0, 3, 0, 14, 1, 14, 0, 8, 1, 11, 0, 16, 0, 15, 0, 16, 1, 16, 0, 17, 0, 17, 0, 6, 1, 15, 0, 18, 0, 18, 0, 17, 1, 6, 0, 19, 0, 2, 0, 7, 0, 19, 0, 20, 0, 20, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )
shader_param/Frequency = 0.3
shader_param/Speed = 1.0
shader_param/Amplitude = 20.0

[node name="base_green" type="Node2D"]
position = Vector2( 1024, 1024 )

[node name="green" type="Sprite" parent="."]
material = SubResource( 21 )
texture = ExtResource( 1 )
offset = Vector2( 64, 64 )
region_enabled = true
region_rect = Rect2( 0, 0, 20480, 20480 )
