[gd_resource type="ShaderMaterial" load_steps=22 format=2]

[ext_resource path="res://data/private/textures/green_square.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=27]
function = 1

[sub_resource type="VisualShaderNodeTexture" id=10]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeScalarOp" id=32]
default_input_values = [ 0, 0.0, 1, 16.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=35]
default_input_values = [ 0, 0.0, 1, 6.28319 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=36]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=38]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[sub_resource type="VisualShader" id=12]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2 : hint_albedo;


void vertex() {
// Sortie:0

}

void fragment() {
// Entrée:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out3p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// VectorDecompose:9
	float n_out9p0;
	float n_out9p1;
	float n_out9p2;
	n_out9p0 = n_out3p0.x;
	n_out9p1 = n_out3p0.y;
	n_out9p2 = n_out3p0.z;

// ScalarOp:23
	float n_in23p1 = 16.00000;
	float n_out23p0;
	n_out23p0 = n_out9p0 / n_in23p1;

// ScalarOp:26
	float n_in26p1 = 6.28319;
	float n_out26p0;
	n_out26p0 = n_out23p0 * n_in26p1;

// ScalarOp:29
	float n_in29p1 = 4.00000;
	float n_out29p0;
	n_out29p0 = n_out26p0 * n_in29p1;

// ScalarFunc:25
	float n_out25p0;
	n_out25p0 = cos(n_out29p0);

// ScalarOp:27
	float n_in27p1 = 1.00000;
	float n_out27p0;
	n_out27p0 = n_out25p0 + n_in27p1;

// ScalarOp:28
	float n_in28p1 = 2.00000;
	float n_out28p0;
	n_out28p0 = n_out27p0 / n_in28p1;

// Entrée:4
	float n_out4p0;
	n_out4p0 = TIME;

// ScalarOp:24
	float n_in24p1 = 2.00000;
	float n_out24p0;
	n_out24p0 = n_out4p0 * n_in24p1;

// ScalarFunc:10
	float n_out10p0;
	n_out10p0 = sin(n_out24p0);

// ScalarOp:15
	float n_in15p1 = 1.00000;
	float n_out15p0;
	n_out15p0 = n_out10p0 / n_in15p1;

// ScalarOp:13
	float n_out13p0;
	n_out13p0 = n_out28p0 * n_out15p0;

// ScalarFunc:17
	float n_out17p0;
	n_out17p0 = cos(n_out24p0);

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0;
	n_out11p0 = n_out17p0 + n_in11p1;

// ScalarOp:12
	float n_in12p1 = 2.00000;
	float n_out12p0;
	n_out12p0 = n_out11p0 / n_in12p1;

// ScalarOp:14
	float n_out14p0;
	n_out14p0 = n_out13p0 + n_out12p0;

// ScalarOp:6
	float n_out6p0;
	n_out6p0 = n_out2p1 * n_out14p0;

// Sortie:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out6p0;

}

void light() {
// Sortie:0

}
"
graph_offset = Vector2( -1420.61, -595.5 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -400, -460 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( -1460, -380 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -1580, 300 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( 100, 160 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( -1380, -240 )
nodes/fragment/10/node = SubResource( 21 )
nodes/fragment/10/position = Vector2( -1180, 320 )
nodes/fragment/11/node = SubResource( 22 )
nodes/fragment/11/position = Vector2( -980, 300 )
nodes/fragment/12/node = SubResource( 23 )
nodes/fragment/12/position = Vector2( -800, 300 )
nodes/fragment/13/node = SubResource( 24 )
nodes/fragment/13/position = Vector2( -500, 160 )
nodes/fragment/14/node = SubResource( 25 )
nodes/fragment/14/position = Vector2( -280, 160 )
nodes/fragment/15/node = SubResource( 26 )
nodes/fragment/15/position = Vector2( -840, 560 )
nodes/fragment/17/node = SubResource( 27 )
nodes/fragment/17/position = Vector2( -1180, 260 )
nodes/fragment/23/node = SubResource( 32 )
nodes/fragment/23/position = Vector2( -1180, -260 )
nodes/fragment/24/node = SubResource( 33 )
nodes/fragment/24/position = Vector2( -1380, 280 )
nodes/fragment/25/node = SubResource( 34 )
nodes/fragment/25/position = Vector2( -720, -200 )
nodes/fragment/26/node = SubResource( 35 )
nodes/fragment/26/position = Vector2( -1020, -260 )
nodes/fragment/27/node = SubResource( 36 )
nodes/fragment/27/position = Vector2( -500, -180 )
nodes/fragment/28/node = SubResource( 37 )
nodes/fragment/28/position = Vector2( -340, -100 )
nodes/fragment/29/node = SubResource( 38 )
nodes/fragment/29/position = Vector2( -860, -120 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 1, 6, 0, 3, 0, 9, 0, 11, 0, 12, 0, 13, 0, 14, 0, 10, 0, 15, 0, 12, 0, 14, 1, 17, 0, 11, 0, 14, 0, 6, 1, 15, 0, 13, 1, 6, 0, 0, 1, 2, 0, 0, 0, 9, 0, 23, 0, 4, 0, 24, 0, 24, 0, 17, 0, 24, 0, 10, 0, 23, 0, 26, 0, 25, 0, 27, 0, 27, 0, 28, 0, 28, 0, 13, 0, 26, 0, 29, 0, 29, 0, 25, 0 )

[resource]
shader = SubResource( 12 )

