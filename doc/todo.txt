1st step :::
- Work on loot interface
- BUG: I can target myself !
- BUG: ran out of energy with 3 000 to spare after playing for a while ?
- BUG: Dropping / removing scanner should update scanner behavior
- Ship transfer and crafting
- make sure player cannot generate more energy than max capacity
- Spawning
- re-work Object identification (show as unknown, then remember id-ed stuff)
- Basic interaction
	- Look around
		- select item using keyboard
	- Shoot
		- select target using keyboard
	- Scan
		- Give health remaining on ships
		- Give detailed description of planet (rich but hard to mine, poor but easy to mine, etc)
- Two places where I access cargo content and juste do -= 1. or .remove()... but if the result returned was in BaseAttribute that's dangerous

- check if assigning array or dictionary copy or reference content in godot
- Ability to swap tileset for ascii somehow
- Look & feel
	- Icons :
		- Converter
		- Hydrogen
		- Scanner
		- Shield
		- Laser turret
		- Missile Launcher
		- Ship parts ?
- GUI
	- Status
	- Log window
	- Buttons
	- Layouts
		- modal windows ?
		- Hiding control when asking question ?

	
	
	
polish :::
- block button shortcuts when dialog is open
- Generic system to show/hide button based on player inv/equippement
- Cache JSONs when loaded 
	- so I stop getting it from disk everytime I need the attributes of an equiped object,
	- base_attributes could also be changed to point to the cached data to avoid duplication
- Change FTL button to say > or < depending on wormhole data
- When dead FTL button stays invisible ?
- Drag-cancel as % of screen resolution
- smooth camera (a la township?)
	- smooth zoom limits & exponential zoom
	- drag still remember even tough camera doesn't pass limit

- Improve data system
	- overrides (modifed_attributes)
	
- Read-Only base_attributes to prevent un-savable changes by mistake
	
- Godot : Implement Localization
	- You can link CSVs in localization, replace certain resources (like textures) with others and even change the project name based on choosen locale
	- CSVs file are automatically converted into localization files
		- use tr() method to get translation from keyboard
		- button labels and such automatically check if text is a key and translate
		- for format godot support stuff like "bleh {id}".format({"id":"hello world"})\
		
IDEAS:::
- If you try to produce energy over the maximum of the ship capacity there is a chance you "choke" (engine goes critical and blow up)
	
	
DONE :::
- Animation !
- Make energy work
	- Assign energy for actions
	- Use energy when doing actions
	- Look around
- "more" button with a list of less common actions (look around, equip/unequip, etc.)
- Equipping objects duplicate them ! (mis-calling a signal (gotta be careful with parameters, it fail silently))
- Shields ?
	- no health regen... but implement shield that DO regen (at the cost of energy ?)
	- Use Matter-Energy converter to produce energy
		- Spawn items from destoyed ships
	- save and restore modified attributes
- Basic AI
	- Shoot back
- Mersenne Twister
- BUG: don't consume energy or AP before knowing if we have enough ammo !
- BUG: when 0 missile in inventory, still shows Missile (but not "1 x" ***) (problem with data being : "data/json/..." and src being : "res://data/json/...")
- BUG: laser still use missiles ? (forgot to remove ammo from json)
	- Add lasers (shoot in straight line (left-right-up-down), do not use ammo, use more energy per shot)
	- Limit grid to weapon range
	- Death if no hull or energy
	- energy to matter converter
		- design (crafting system ? simple change hydrogen into energy?)
		- implement new UI for crafting
	- Update hull and energy in status bar
- Start Menu
- Result screen on death
- Make converter button invisible if no converter equiped
- Equip items
- Die when 0 energy or 0 hull
- Position of player ship when going up/down wormholes (In the end I just have an enum. Hackish but couldn't figure out a better way)
	- Maybe need to pass some "origin" parameter
		- origin is null, player should be on top wormhole
		- origin is X,Y, put player at XY
- Memory / scanner issues when going up & down levels (scanner reference deleted objects ? yet it should be clearing it's list when an object is deleted... need investigating)
- Starting wormhole is invisible because of memory... why ?
- FoW (Fog of War)
	- "remembered" sprite appearance
	- Not visible sprite
	- Fog of War "look"
- Memory system :
	- Desaturation shader for sprites
	- Pass modified_attributes init param to CreateNode() method
	- add a "memory" attribute with "reference_unique_id" and "saturation_value"
	- have either MemoryBehavior or SpriteBehavior (or both together) create the sprite then set the saturation in the shader
- Load and Save
- Fixed data for wormholes



- Run on Android
- message log when passing over an object
- fix cargo hold storage volume check with base_attributes & modifed_attributes
- Drop
	- Display inventory
		- Display volume used / volume capacity
		- Dialog ok/cancel buttons
		- Decide on the way to do selection


- Pickup
- Destroy other ships
- Spawn resource from planet
		
		
- (AI)Ship move
- Random planet
- Random ships (at least 2 types)
- Data System
- Move around using touch control & keyboard
